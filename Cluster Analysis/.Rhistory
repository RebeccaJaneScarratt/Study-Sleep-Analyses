sign=c(theseStats['p.adj.signif'][1,1], theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='loudness'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Loudness (dB)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Loudness') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/loudness1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'danceability')
effsize = c(theseStats['effsize'][1,1],theseStats['effsize'][2,1], theseStats['effsize'][3,1])
effsize = round(effsize, digits = 3)
sign=c(theseStats['p.adj.signif'][1,1], theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='danceability'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Danceability (0-1)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Danceability') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/danceability1312.pdf', width = w, height = h, dpi=dpi)
View(statResults)
theseStats = subset(statResults, AudioFeature == 'danceability')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 3)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='danceability'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Danceability (0-1)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Danceability') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/danceability1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'danceability')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 3)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='danceability'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Danceability (0-1)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Danceability') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/danceability1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'danceability')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='danceability'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Danceability (0-1)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Danceability') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/danceability1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'loudness')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='loudness'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Loudness (dB)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Loudness') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/loudness1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'energy')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='energy'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Energy (0-1)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Energy') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/energy1312.pdf', width = w, height = h, dpi=dpi)
#valence
theseStats = subset(statResults, AudioFeature == 'valence')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='valence'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Valence (1=positive)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Valence') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/valence1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'speechiness')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='speechiness'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Speechiness (0-1)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Speechiness') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/speechiness1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'liveness')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='liveness'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Liveness (0-1)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Liveness') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/liveness1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'tempo')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
p <- ggplot(subset(meltData, variable=='tempo'),aes(x=category, y=value, fill = category))+
geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Tempo (bpm)')+xlab('')+
geom_signif(
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Tempo') +
theme(text = element_text(size=12))
ggsave('Three Way Comparison/tempo1312.pdf', width = w, height = h, dpi=dpi)
#instrumentalness
theseStats = subset(statResults, AudioFeature == 'instrumentalness')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
instrDF <- as.data.frame(instrTableProp)
p <- ggplot(instrDF, aes(x=category, y=Freq, fill=instrRound))+
geom_col() +
#geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
#geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Percentage of instrumentalness')+xlab('')+
geom_signif(
y_position = c(1.1, 1.18, 1.26),
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+#+guides(fill = "none")+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Instrumentalness') +
theme(text = element_text(size=12)) +
labs(colour = 'instrRound')
p
ggsave('Three Way Comparison/instrumentalness1312.pdf', width = w, height = h, dpi=dpi)
theseStats = subset(statResults, AudioFeature == 'acousticness')
effsize = c(theseStats['effsize'][2,1],theseStats['effsize'][3,1], theseStats['effsize'][1,1])
effsize = round(effsize, digits = 2)
sign=c(theseStats['p.adj.signif'][2,1], theseStats['p.adj.signif'][3,1], theseStats['p.adj.signif'][1,1])
bracket = data.frame(') ')
statAnnotation = data.frame(effsize, sign, bracket)
statAnnotation$both = paste(statAnnotation$sign, statAnnotation$effsize, sep= ' (')
statAnnotation$three = paste(statAnnotation$both, statAnnotation$X...., sep='')
statAnnotation = statAnnotation[, -c(1:4)]
mergedData$acoRound <- round(mergedData$acousticness)
mergedData$acoRound <- as.factor(mergedData$acoRound)
acoTable <- table(subset(mergedData, select=c('category', 'acoRound')))
acoTableProp <- prop.table(acoTable, 1)
acoDF <- as.data.frame(acoTableProp)
p <- ggplot(acoDF, aes(x=category, y=Freq, fill=acoRound))+
geom_col() +
#geom_flat_violin(position = position_nudge(x = 0, y = 0),adjust = 0.4)+
#geom_boxplot(aes(x = as.numeric(category)-0.1, y = value),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
#geom_point(position = position_jitter(width = .45), size = .1, alpha=0.02)+
ylab('Percentage of acousticness')+xlab('')+
geom_signif(
y_position = c(1.1, 1.18, 1.26),
comparisons = list(
c('General', 'Study'),
c('Study', 'Sleep'),
c('General', 'Sleep')),
annotation=statAnnotation,
step_increase = .08
) +
theme_cowplot()+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle('Acousticness') +
theme(text = element_text(size=12))
p
ggsave('Three Way Comparison/acousticness1312.pdf', width = w, height = h, dpi=dpi)
View(statResults)
data.all <-read.csv('SPD_withClusters.csv')
library(dplyr)
library(ggplot2)
library(reshape2)
library(scales)
library(data.table)
#library(flipMultivariates)
library(psych)
library(rstudioapi)
library(rstatix)
library(tictoc)
library(cowplot)
library(readr)
# Set seed for reproducability
set.seed(42)
data.all$X <- NULL
data.all$X.1 <- NULL
#data$label <- as.factor(data$label)
data.all$playlistID <- as.factor(data.all$playlistID)
data.all$TrackID <- as.factor(data.all$TrackID)
data.all$mode <- as.factor(data.all$mode)
# deduplicate
dupIndex <- duplicated(data.all[,c('TrackID')])
data.unique <- data.all[!dupIndex,]
data <- data.unique
# Write a file to only have unique dataset
# write(data.unique, 'SSM_unique_withClusters.csv')
# Do K-means on the de-duplicated study data ----
# Sub divisions for Clustering
dataForClustering <- data[,c(15:23)]
infoForClustering <- data[,c(11)]
#Feature scaling
dFC.s = scale(dataForClustering, center = TRUE, scale = TRUE)
#Code to use if ever we want to scale back
dFC.orig = t(apply(dFC.s, 1, function(r)r*attr(dFC.s,'scaled:scale') + attr(dFC.s, 'scaled:center')))
summary(dataForClustering)
summary(dFC.s)
# Using the elbow method to find the optimal number of clusters
wcss = vector()
kClusters = list()
# Set data types
data.all$X <- NULL
data.all$X.1 <- NULL
#data$label <- as.factor(data$label)
data.all$playlistID <- as.factor(data.all$playlistID)
data.all$TrackID <- as.factor(data.all$TrackID)
data.all$mode <- as.factor(data.all$mode)
dupIndex <- duplicated(data.all[,c('TrackID')])
data.unique <- data.all[!dupIndex,]
data <- data.unique
View(data)
# Sub divisions for Clustering
dataForClustering <- data[,c(7:15)]
View(dataForClustering)
infoForClustering <- data[,c(3)]
#Feature scaling
dFC.s = scale(dataForClustering, center = TRUE, scale = TRUE)
#Code to use if ever we want to scale back
dFC.orig = t(apply(dFC.s, 1, function(r)r*attr(dFC.s,'scaled:scale') + attr(dFC.s, 'scaled:center')))
summary(dataForClustering)
summary(dFC.s)
wcss = vector()
kClusters = list()
# reducing to k-max = 10 here, as we have no reason to believe there would be more
for (i in 1:10) {
thisK <- kmeans(x = dFC.s, centers = i, iter.max=20000)
#wcss[i] = sum(kmeans(dFC.s, i, iter.max=1000)$withinss)
wcss[i] = sum(thisK$withinss)
kClusters[[i]] = t(apply(thisK$centers, 1, function(r)r*attr(dFC.s,'scaled:scale') + attr(dFC.s, 'scaled:center')))
}
plot(1:10,
wcss,
type = 'b',
main = paste('Selection of most suitable k'),
xlab = 'k',
ylab = 'Within-cluster sum-of-squares')
# Going for cluster plots instead
library(factoextra)
thisK <- kmeans(x = dFC.s, centers = 3, iter.max=20000)
plotForK3 <- fviz_cluster(thisK, data=dFC.s)
plotForK3
kmeans = kmeans(x = dFC.s, centers = 3, iter.max=20000)
kmeans.labels = kmeans$cluster
data$clusterID <- kmeans.labels
data$clusterID<- as.factor(data$clusterID)
descriptiveClusters <- describeBy(data[c(15:23)], data$clusterID, IQR=TRUE, fast=FALSE)
write.csv(descriptiveClusters[1], 'Cluster Analysis/c1_Descriptive_sleep_3.csv')
write.csv(descriptiveClusters[2], 'Cluster Analysis/c2_Descriptive_sleep_3.csv')
write.csv(descriptiveClusters[3], 'Cluster Analysis/c3_Descriptive_sleep_3.csv')
mC1 <- descriptiveClusters[1]$'1'
mC1 <- t(t(mC1$median))
mC2 <- descriptiveClusters[2]$'2'
mC2 <- t(t(mC2$median))
mC3 <- descriptiveClusters[3]$'3'
mC3 <- t(t(mC3$median))
medianDF <- data.frame(mC1)
medianDF$cluster2 <- mC2
medianDF$cluster3 <- mC3
colnames(medianDF) <- c('Cluster1', 'Cluster2', 'Cluster3')
rownames(medianDF) <- c('danceability', 'energy', 'loudness', 'speechiness', 'acousticness', 'instrumentalness',
'liveness', 'valence', 'tempo')
write.csv(t(medianDF), 'Cluster Analysis/ClustersMedian3_sleep.csv')
descriptiveClusters <- describeBy(data[c(7:15)], data$clusterID, IQR=TRUE, fast=FALSE)
write.csv(descriptiveClusters[1], 'Cluster Analysis/c1_Descriptive_sleep_3.csv')
write.csv(descriptiveClusters[2], 'Cluster Analysis/c2_Descriptive_sleep_3.csv')
write.csv(descriptiveClusters[3], 'Cluster Analysis/c3_Descriptive_sleep_3.csv')
# Now make a table with median values per cluster
mC1 <- descriptiveClusters[1]$'1'
mC1 <- t(t(mC1$median))
mC2 <- descriptiveClusters[2]$'2'
mC2 <- t(t(mC2$median))
mC3 <- descriptiveClusters[3]$'3'
mC3 <- t(t(mC3$median))
medianDF <- data.frame(mC1)
medianDF$cluster2 <- mC2
medianDF$cluster3 <- mC3
colnames(medianDF) <- c('Cluster1', 'Cluster2', 'Cluster3')
rownames(medianDF) <- c('danceability', 'energy', 'loudness', 'speechiness', 'acousticness', 'instrumentalness',
'liveness', 'valence', 'tempo')
write.csv(t(medianDF), 'Cluster Analysis/ClustersMedian3_sleep.csv')
data.all<-read.csv('CleanedData_AllTracks.csv')
setwd("~/GitHub/Study-Sleep-Analyses/Cluster Analysis")
data.all<-read.csv('CleanedData_AllTracks.csv')
data.all$X <- NULL
data.all$X.1 <- NULL
#data$label <- as.factor(data$label)
data.all$playlistID <- as.factor(data.all$playlistID)
data.all$TrackID <- as.factor(data.all$TrackID)
data.all$mode <- as.factor(data.all$mode)
# deduplicate
dupIndex <- duplicated(data.all[,c('TrackID')])
data.unique <- data.all[!dupIndex,]
data <- data.unique
View(data)
